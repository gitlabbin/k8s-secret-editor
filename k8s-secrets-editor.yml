apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: k8s-secrets-editor
  name: k8s-secrets-editor
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-secrets-editor
  labels:
    app: k8s-secrets-editor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: k8s-secrets-editor
  namespace: kube-system

---
kind: "Deployment"
apiVersion: apps/v1
metadata:
  name: "k8s-secrets-editor"
  labels:
    state: "serving"
  namespace: kube-system
spec:
  replicas: 1
  selector:
      matchLabels:
        app: "k8s-secrets-editor"
  template:
    metadata:
      labels:
        app: "k8s-secrets-editor"
        name: "k8s-secrets-editor"
    spec:
      containers:
        - image: docker.io/briangxchen/k8s-secret-editor
          imagePullPolicy: Always
          name: k8s-secrets-editor
          ports:
            - containerPort: 8080
              name: http
          # Set HTTP admin password. Default admin
          env:
            - name: ADMIN_PASSWORD
              value: 'admin'
      serviceAccountName: k8s-secrets-editor
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: "k8s-secrets-editor"
  name: "k8s-secrets-editor"
  namespace: kube-system
spec:
  ports:
    - port: 8080
      name: http
  selector:
    name: "k8s-secrets-editor"
  # Uncomment to create a load balancer for this service
  type: LoadBalancer
